/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.data.Data;
import controller.operations.ObjectFinder;
import controller.operations.outfitOperations.OutfitOperations;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.outfitFields.Outfit;
import model.User;

/**
 *
 * @author Ege
 */
public class AllOutfitFrame extends javax.swing.JFrame {
   private User user;
   
   

    /**
     * Creates new form AllOutfitFrame
     */
    public AllOutfitFrame(User user) {
        this.user=user;
        
        
        initComponents();
        
        showMessage.setText("");
        showMessage.setForeground(Color.MAGENTA);
        
       fillOutfitTable();
        
    }
    private void fillOutfitTable(){
        DefaultTableModel model=(DefaultTableModel) outfitTable.getModel();
        for (int i =0;i<Data.outfits.size();i++) {
           
            Object[] outfit={Data.outfits.get(i).getProductId(),Data.outfits.get(i).getBrandName(),
            Data.outfits.get(i).getColor(),Data.outfits.get(i).getClothingType(),Data.outfits.get(i).getSize(),Data.outfits.get(i).getGender(),Data.outfits.get(i).getLikedUsers().size(),Data.outfits.get(i).getDislikedUsers().size()};
            model.addRow(outfit);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outfitTable = new javax.swing.JTable();
        dislikeButton = new javax.swing.JButton();
        likeButton = new javax.swing.JButton();
        commentArea = new javax.swing.JTextField();
        commentButton = new javax.swing.JButton();
        showCommentMessage = new javax.swing.JLabel();
        backToUserFrame = new javax.swing.JButton();
        showMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        outfitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Brand Name", "Color", "Clothing Type", "Size", "Gender", "Like", "Dislike"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        outfitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outfitTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(outfitTable);

        dislikeButton.setBackground(new java.awt.Color(255, 0, 0));
        dislikeButton.setText("Dislike");
        dislikeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dislikeButtonActionPerformed(evt);
            }
        });

        likeButton.setBackground(new java.awt.Color(51, 255, 51));
        likeButton.setText("Like");
        likeButton.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                likeButtonMouseWheelMoved(evt);
            }
        });
        likeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                likeButtonActionPerformed(evt);
            }
        });

        commentArea.setText("Please comment here...");
        commentArea.setMinimumSize(new java.awt.Dimension(7, 5));
        commentArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commentAreaMouseClicked(evt);
            }
        });
        commentArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentAreaActionPerformed(evt);
            }
        });

        commentButton.setText("Comment");
        commentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentButtonActionPerformed(evt);
            }
        });

        showCommentMessage.setForeground(new java.awt.Color(255, 51, 51));

        backToUserFrame.setBackground(new java.awt.Color(0, 0, 0));
        backToUserFrame.setIcon(new javax.swing.ImageIcon("backButton.jpeg")); // NOI18N
        backToUserFrame.setBorderPainted(false);
        backToUserFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToUserFrameActionPerformed(evt);
            }
        });

        showMessage.setForeground(new java.awt.Color(255, 0, 0));
        showMessage.setText("message");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(commentArea, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(backToUserFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(likeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dislikeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showCommentMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(commentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backToUserFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dislikeButton)
                        .addComponent(likeButton))
                    .addComponent(showCommentMessage))
                .addGap(18, 18, 18)
                .addComponent(commentArea, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(commentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void commentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentButtonActionPerformed
           DefaultTableModel model=(DefaultTableModel) outfitTable.getModel();
           showMessage.setForeground(Color.red);
        if(commentArea.getText().equals(" ")){
               
                   showMessage.setText("Comment field cannot be left blank");
                   
                   
              
               
           }
           else{
               OutfitOperations outfitOperations=new OutfitOperations();
               int selectedRow=outfitTable.getSelectedRow();
               
               if(selectedRow==-1){
                   if(outfitTable.getRowCount()==0){
                       showMessage.setText("Product table is empty");
                   }else{
                       showMessage.setText("No product selected");
                       
                   }
               }
               else{
                   String productId=(String) model.getValueAt(selectedRow,0);
                   Outfit outfit=ObjectFinder.getOutfitFromProductId(productId);
                   String comment=commentArea.getText();
                   outfitOperations.commentOperation(outfit, user,comment);
                   showMessage.setForeground(Color.MAGENTA);
                   showMessage.setText("Comment is added succesfully");
                   
               }
           }
       
        
    }//GEN-LAST:event_commentButtonActionPerformed
    
    private void commentAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentAreaActionPerformed
        
    }//GEN-LAST:event_commentAreaActionPerformed

    private void commentAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commentAreaMouseClicked
        commentArea.setText(" ");
    }//GEN-LAST:event_commentAreaMouseClicked

    private void backToUserFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToUserFrameActionPerformed
            this.setVisible(false);
            UserFrame userFrame=new UserFrame(user);
            userFrame.setVisible(true);
      
       
    }//GEN-LAST:event_backToUserFrameActionPerformed

    private void likeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_likeButtonActionPerformed
       DefaultTableModel model=(DefaultTableModel) outfitTable.getModel();
       int selectedRow=outfitTable.getSelectedRow();
       
       if(selectedRow==-1){
           if(outfitTable.getRowCount()==0){
               showMessage.setText("Product table is empty");
               
           }else{
               showMessage.setText("No product selected!");
           }
       }else{
           String productId=(String) model.getValueAt(selectedRow,0);
           Outfit selectedOutfit=ObjectFinder.getOutfitFromProductId(productId);
           
           OutfitOperations outfitOperations=new OutfitOperations();
           
           if(outfitOperations.likeOperation(selectedOutfit, user)){
               model.setValueAt(selectedOutfit.getLikedUsers().size(),selectedRow,6);
                model.setValueAt(selectedOutfit.getDislikedUsers().size(), selectedRow,7);
           }else{
               showMessage.setText("You already liked this outfit!");
               
           }
           
         
           
                   
       }
       
    }//GEN-LAST:event_likeButtonActionPerformed

    private void dislikeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dislikeButtonActionPerformed
        DefaultTableModel model=(DefaultTableModel) outfitTable.getModel();
        int selectedRow=outfitTable.getSelectedRow();
        
        if(selectedRow==-1){
            if(outfitTable.getRowCount()==0){
                showMessage.setText("Product table is empty");
            }
            else{
                showMessage.setText("No product selected!");
            }
        }else{
           String productId=(String) model.getValueAt(selectedRow,0);
           Outfit selectedOutfit=ObjectFinder.getOutfitFromProductId(productId);
           OutfitOperations outfitOperations=new OutfitOperations();
           if(outfitOperations.dislikeOperation(selectedOutfit, user)){
               model.setValueAt(selectedOutfit.getDislikedUsers().size(), selectedRow,7);
               model.setValueAt(selectedOutfit.getLikedUsers().size(), selectedRow,6);
           }
           else{
               showMessage.setText("You already disliked this outfit");
           }
            
        }
    }//GEN-LAST:event_dislikeButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
        showMessage.setText("");
    }//GEN-LAST:event_formMouseClicked

    private void likeButtonMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_likeButtonMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_likeButtonMouseWheelMoved

    private void outfitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outfitTableMouseClicked
        showMessage.setText("");
    }//GEN-LAST:event_outfitTableMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToUserFrame;
    public javax.swing.JTextField commentArea;
    private javax.swing.JButton commentButton;
    private javax.swing.JButton dislikeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton likeButton;
    private javax.swing.JTable outfitTable;
    private javax.swing.JLabel showCommentMessage;
    private javax.swing.JLabel showMessage;
    // End of variables declaration//GEN-END:variables
}
